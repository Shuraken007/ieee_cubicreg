import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
from scipy.interpolate import spline

r_up = np.loadtxt("time+.txt")
r_do = np.loadtxt("time-.txt")
r_do *= np.array([1, 1, 1, -1])
r_do = np.flip(r_do, 0)
re = np.concatenate((r_do, r_up))

i_up = np.loadtxt("time+j.txt")
i_do = np.loadtxt("time-j.txt")
i_do *= np.array([1, 1, 1, -1])
i_do = np.flip(i_do, 0)
im = np.concatenate((i_do, i_up))


plt.subplot(211)
x = np.arange(1, 20)
plt.plot(re[:, 3], re[:, 0], re[:, 3], re[:, 1], re[:, 3], re[:, 2])
plt.xlabel(r'$\parallel S\parallel $ - power')
plt.ylabel(r'$Time(S)$')
blue_patch = mpatches.Patch(color='blue', label='Trust regions method')
green_patch = mpatches.Patch(color='green', label='Mix method')
orange_patch = mpatches.Patch(color='orange', label='Newthon method')
plt.legend(handles=[blue_patch, green_patch, orange_patch])
plt.ylim(ymin=0, ymax=2 * np.max(re[:, 0]))
plt.grid(True)
plt.title(r'$S.real$')

plt.subplot(212)
x = np.arange(1, 20)
plt.plot(im[:, 3], im[:, 0], im[:, 3], im[:, 1], im[:, 3], im[:, 2])
plt.xlabel(r'$\parallel S\parallel $ - power')
plt.ylabel(r'$Time(S)$')
blue_patch = mpatches.Patch(color='blue', label='Trust regions method')
green_patch = mpatches.Patch(color='green', label='Mix method')
orange_patch = mpatches.Patch(color='orange', label='Newthon method')
plt.legend(handles=[blue_patch, green_patch, orange_patch])
plt.ylim(ymin=0, ymax=0.7 * np.max(im[:, 1]))
plt.grid(True)
plt.title(r'$S.imag$')
plt.show()
"""
plt.subplot(121)
x = np.arange(1, 20)
plt.plot(re[:, 3], re[:, 2] / re[:, 0], re[:, 3], re[:, 2] / re[:, 1])
plt.xlabel(r'$\parallel S\parallel $ - power')
plt.ylabel(r'$Accelerate by Mix method(S)$')
blue_patch = mpatches.Patch(color='blue', label='Trust regions method')
orange_patch = mpatches.Patch(color='orange', label='Newthon method')
plt.legend(handles=[blue_patch, orange_patch])
#plt.ylim(ymin=0, ymax=0.1 * np.max(re[:, 1]))
plt.grid(True)
plt.title(r'$S.real$')

plt.subplot(122)
x = np.arange(1, 20)
plt.plot(im[:, 3], im[:, 2] / im[:, 0], im[:, 3], im[:, 2] / im[:, 1])
plt.xlabel(r'$\parallel S\parallel $ - power')
plt.ylabel(r'$Accelerate A(S) by Mix method$')
blue_patch = mpatches.Patch(color='blue', label='Trust regions method')
orange_patch = mpatches.Patch(color='orange', label='Newthon method')
plt.legend(handles=[blue_patch, orange_patch])
#plt.ylim(ymin=0, ymax=0.7 * np.max(im[:, 1]))
plt.grid(True)
plt.title(r'$S.imag$')
plt.show()"""
